aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_brewer(palette="Greens") +
labs(colour = "PDF")
# All together
df_exp <- data.frame(x = rexp(n, rate = 5))
df_gamma <- data.frame(y = rgamma(n, shape = 5))
ggplot(df_gamma, aes(x = y)) + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dexp(x, 1) * n * binwidth,
aes(colour = "Exp(1)"), size = 1) +
stat_function(fun = function(x) dexp(x, 2) * n * binwidth,
aes(colour = "Exp(2)"), size = 1) +
stat_function(fun = function(x) dexp(x, 3) * n * binwidth,
aes(colour = "Exp(3)"), size = 1) +
stat_function(fun = function(x) dexp(x, 4) * n * binwidth,
aes(colour = "Exp(4)"), size = 1) +
stat_function(fun = function(x) dexp(x, 5) * n * binwidth,
aes(colour = "Exp(5)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_brewer(palette="Spectral") +
labs(colour = "PDF")
# Gamma distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = rgamma(n, shape = 5))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dgamma(x, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1) +
scale_colour_brewer(palette="Spectral") +
labs(colour = "PDF")
# Gamma distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = rgamma(n, shape = 5))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dgamma(x, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
# All together
df_exp <- data.frame(x = rexp(n, rate = 5))
df_gamma <- data.frame(y = rgamma(n, shape = 5))
ggplot(df_gamma, aes(x = y)) + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dexp(x, 1) * n * binwidth,
aes(colour = "Exp(1)"), size = 1) +
stat_function(fun = function(x) dexp(x, 2) * n * binwidth,
aes(colour = "Exp(2)"), size = 1) +
stat_function(fun = function(x) dexp(x, 3) * n * binwidth,
aes(colour = "Exp(3)"), size = 1) +
stat_function(fun = function(x) dexp(x, 4) * n * binwidth,
aes(colour = "Exp(4)"), size = 1) +
stat_function(fun = function(x) dexp(x, 5) * n * binwidth,
aes(colour = "Exp(5)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_manual("PDF", values = c("deeppink", "dodgerblue3", "green", "blue", "red", "yellow", "black", "#4271AE", "#1F3552", "orange"))
hist(rexp(1000, 1))
hist(rgamma(1000, 1))
# Normal distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = rnorm(n, 0, 0.25))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") + ggtitle("Normal function curves of probabilities") +
theme_bw() +
stat_function(fun = function(x) dnorm(x, 0, 0.05) * n * binwidth,
size = 1, aes(colour = "N(0, 0.05)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.1) * n * binwidth,
size = 1, aes(colour = "N(0, 0.1)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.15) * n * binwidth,
size = 1, aes(colour = "N(0, 0.15)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.2) * n * binwidth,
size = 1, aes(colour = "N(0, 0.2)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.25) * n * binwidth,
size = 1, aes(colour = "N(0, 0.25)")) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
# Normal distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = rnorm(n, 0, 0.25))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dnorm(x, 0, 0.05) * n * binwidth,
size = 1, aes(colour = "N(0, 0.05)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.1) * n * binwidth,
size = 1, aes(colour = "N(0, 0.1)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.15) * n * binwidth,
size = 1, aes(colour = "N(0, 0.15)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.2) * n * binwidth,
size = 1, aes(colour = "N(0, 0.2)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.25) * n * binwidth,
size = 1, aes(colour = "N(0, 0.25)")) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
# Exponential distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = rexp(n, rate = 5))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dexp(x, 1) * n * binwidth,
aes(colour = "Exp(1)"), size = 1) +
stat_function(fun = function(x) dexp(x, 2) * n * binwidth,
aes(colour = "Exp(2)"), size = 1) +
stat_function(fun = function(x) dexp(x, 3) * n * binwidth,
aes(colour = "Exp(3)"), size = 1) +
stat_function(fun = function(x) dexp(x, 4) * n * binwidth,
aes(colour = "Exp(4)"), size = 1) +
stat_function(fun = function(x) dexp(x, 5) * n * binwidth,
aes(colour = "Exp(5)"), size = 1) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
# Gamma distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = rgamma(n, shape = 5))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dgamma(x, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
# All together
df_exp <- data.frame(x = rexp(n, rate = 5))
df_gamma <- data.frame(y = rgamma(n, shape = 5))
ggplot(df_gamma, aes(x = y)) + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dexp(x, 1) * n * binwidth,
aes(colour = "Exp(1)"), size = 1) +
stat_function(fun = function(x) dexp(x, 2) * n * binwidth,
aes(colour = "Exp(2)"), size = 1) +
stat_function(fun = function(x) dexp(x, 3) * n * binwidth,
aes(colour = "Exp(3)"), size = 1) +
stat_function(fun = function(x) dexp(x, 4) * n * binwidth,
aes(colour = "Exp(4)"), size = 1) +
stat_function(fun = function(x) dexp(x, 5) * n * binwidth,
aes(colour = "Exp(5)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_manual("PDF", values = c("deeppink", "dodgerblue3", "green", "blue", "red", "yellow", "black", "#4271AE", "#1F3552", "orange"))
# Uniform distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = runif(n, 0, 1))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dunif(x, 0, 1) * n * binwidth,
aes(colour = "Uniform(0, 1)"), size = 1) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
# Uniform distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = runif(n, 0, 1))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dunif(x, 0, 1) * n * binwidth,
aes(colour = "Uniform(0, 1)"), size = 1) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
# Gamma distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = rgamma(n, shape = 5))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dgamma(x, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 10) * n * binwidth,
aes(colour = "Gamma(10)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 15) * n * binwidth,
aes(colour = "Gamma(15)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 20) * n * binwidth,
aes(colour = "Gamma(20)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 25) * n * binwidth,
aes(colour = "Gamma(25)"), size = 1) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
# Gamma distributions used in chapter clustering to generate de synthetic dataset
df <- data.frame(x = rgamma(n, shape = 25))
ggplot(df, aes(x = x))  + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dgamma(x, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 10) * n * binwidth,
aes(colour = "Gamma(10)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 15) * n * binwidth,
aes(colour = "Gamma(15)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 20) * n * binwidth,
aes(colour = "Gamma(20)"), size = 1) +
stat_function(fun = function(x) dgamma(x, 25) * n * binwidth,
aes(colour = "Gamma(25)"), size = 1) +
scale_colour_brewer(palette="Accent") +
labs(colour = "PDF")
83+148+108+112
139+112+201
cl
cl1
cl$cluster
dim(dataset)
lambdas
dim(lambdas)
setwd("~/PhD/thesis_phd/r_codes")
theRes
setwd("~/PhD/PhDThesis/img/gld_clustering/Dataset2")
theRes = readRDS('theRes.rds')
lambdas = extractLambdas(theRes)
lambdas = extractLambdas(theRes, 1450)
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
lambdas = extractLambdas(theRes, 1450)
dim(lambdas)
cl = gldClustering1D(lambdas, 16)
x = cl$x
clusters = cl$clusters$cluster
plot(cl1$clusters$cluster, col = cl1$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
cl = gldClustering1D(lambdas, 16)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
cl = gldClustering1D(lambdas, 16)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
cl = gldClustering1D(lambdas, 16)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
x = cl$x
clusters = cl$clusters$cluster
gldClusterComparison(1, 10, cl$clusters$centers[1,])
gldClustersL3L4(clusters, x)
gldClustersL3L4(clusters, x)
gldClustersL3L4(clusters, x)
lambda1 = lambdas[,,1]
lambda2 = lambdas[,,2]
lambda3 = lambdas[,,3]
lambda4 = lambdas[,,4]
gldClustersL3L4(clusters, x)
gldClustersL3L4(clusters, x)
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
gldClustersL3L4(clusters, x)
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
plot.clusters.l3l4(1, 1)
plot.clusters.l3l4(2, 2)
plot.clusters.l3l4(3, 3)
plot.clusters.l3l4(4, 4)
plot.clusters.l3l4(5, 5)
plot.clusters.l3l4(6, 6)
gldClustersL3L4(clusters, x)
no_clusters = max(clusters)
no_clusters
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
no_clusters = max(clusters)
for (i in 1:no_clusters) {
plot.clusters.l3l4(i, col = i)
#legend_list[[length(legend_list)+1]] = paste("Cluster ", i)
}
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
plot.clusters.l3l4(1, 1)
plot.clusters.l3l4(2, 2)
plot.clusters.l3l4(3, 3)
plot.clusters.l3l4(4, 4)
plot.clusters.l3l4(5, 5)
plot.clusters.l3l4(6, 6)
plot.clusters.l3l4(7, 7)
plot.clusters.l3l4(8, 8)
plot.clusters.l3l4(9, 9)
plot.clusters.l3l4(10, 10)
plot.clusters.l3l4(11, 11)
plot.clusters.l3l4(12, 12)
plot.clusters.l3l4(13, 13)
plot.clusters.l3l4(14, 14)
plot.clusters.l3l4(15, 15)
plot.clusters.l3l4(16, 16)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
gldClustersL3L4(clusters, x)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
gldClustersL3L4(clusters, x)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
gldClusterComparison1D(1, 10, cl$clusters$centers[1])
cl$clusters$centers[1]
cl$clusters$centers[1,]
library("GLDEX", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
gldClusterComparison1D(1, 10, cl$clusters$centers[1,])
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
DInClusters(cl$clusters$centers, 5)
fun.diag.ks.g(result = stackedLambdaMM, data = mydata, no.test = 1000,
param = "fmkl")
junk<-rnorm(1000,100,10)
fit1<-fun.RPRS.ml(junk, c(-1.5, 1.5), leap = 3)
fit1
fun.diag.ks.g(fit1,junk,param="rs")
ks.gof(junk, "pgl", fit, param="fmkl")
ks.gof(junk, "pgl", fit1, param="fmkl")
ks.gof(junk, junk)
DInClusters(cl$clusters$centers, 16)
cl$clusters$size
min(cl$clusters$size)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
DInClusters(cl$clusters$centers, 16)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
gldClustersL3L4(clusters, x)
gldClustersL2L3L4(clusters, x)
gldClustersL3L4(clusters, x)
#Normal and Gamma together
df_exp <- data.frame(x = rnorm(n, 0, 0.25))
df_gamma <- data.frame(y = rgamma(n, shape = 5))
ggplot(df_gamma, aes(x = y)) + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dnorm(x, 0, 0.05) * n * binwidth,
size = 1, aes(colour = "N(0, 0.05)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.1) * n * binwidth,
size = 1, aes(colour = "N(0, 0.1)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.15) * n * binwidth,
size = 1, aes(colour = "N(0, 0.15)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.2) * n * binwidth,
size = 1, aes(colour = "N(0, 0.2)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.25) * n * binwidth,
size = 1, aes(colour = "N(0, 0.25)")) +
stat_function(fun = function(y) dgamma(y, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_manual("PDF", values = c("deeppink", "dodgerblue3", "green", "blue", "red", "yellow", "black", "#4271AE", "#1F3552", "orange"))
df_norm <- data.frame(x = rnorm(n, 0, 0.25))
df_gamma <- data.frame(y = rgamma(n, shape = 5))
ggplot(df_norm, aes(x = x)) + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dnorm(x, 0, 0.05) * n * binwidth,
size = 1, aes(colour = "N(0, 0.05)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.1) * n * binwidth,
size = 1, aes(colour = "N(0, 0.1)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.15) * n * binwidth,
size = 1, aes(colour = "N(0, 0.15)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.2) * n * binwidth,
size = 1, aes(colour = "N(0, 0.2)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.25) * n * binwidth,
size = 1, aes(colour = "N(0, 0.25)")) +
stat_function(fun = function(y) dgamma(y, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_manual("PDF", values = c("deeppink", "dodgerblue3", "green", "blue", "red", "yellow", "black", "#4271AE", "#1F3552", "orange"))
df_norm <- data.frame(x = rnorm(n, 0, 0.25))
df_gamma <- data.frame(y = rgamma(n, shape = 5))
ggplot(df_norm, aes(x = x + y)) + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dnorm(x, 0, 0.05) * n * binwidth,
size = 1, aes(colour = "N(0, 0.05)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.1) * n * binwidth,
size = 1, aes(colour = "N(0, 0.1)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.15) * n * binwidth,
size = 1, aes(colour = "N(0, 0.15)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.2) * n * binwidth,
size = 1, aes(colour = "N(0, 0.2)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.25) * n * binwidth,
size = 1, aes(colour = "N(0, 0.25)")) +
stat_function(fun = function(y) dgamma(y, 1) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 2) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 3) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 4) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_manual("PDF", values = c("deeppink", "dodgerblue3", "green", "blue", "red", "yellow", "black", "#4271AE", "#1F3552", "orange"))
df_norm <- data.frame(x = rnorm(n, 0, 0.25))
df_gamma <- data.frame(y = rgamma(n, shape = 5))
ggplot(df_norm, aes(x = x)) + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dnorm(x, 0, 0.05) * n * binwidth,
size = 1, aes(colour = "N(0, 0.05)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.1) * n * binwidth,
size = 1, aes(colour = "N(0, 0.1)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.15) * n * binwidth,
size = 1, aes(colour = "N(0, 0.15)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.2) * n * binwidth,
size = 1, aes(colour = "N(0, 0.2)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.25) * n * binwidth,
size = 1, aes(colour = "N(0, 0.25)")) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 10) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 15) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 20) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 25) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_manual("PDF", values = c("deeppink", "dodgerblue3", "green", "blue", "red", "yellow", "black", "#4271AE", "#1F3552", "orange"))
df_norm <- data.frame(x = rnorm(n, 0, 0.25))
df_gamma <- data.frame(y = rgamma(n, shape = 5))
ggplot(df_gamma, aes(x = y)) + scale_x_continuous(name = "Probability") +
scale_y_continuous(name = "Frequency") +
theme_bw() +
stat_function(fun = function(x) dnorm(x, 0, 0.05) * n * binwidth,
size = 1, aes(colour = "N(0, 0.05)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.1) * n * binwidth,
size = 1, aes(colour = "N(0, 0.1)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.15) * n * binwidth,
size = 1, aes(colour = "N(0, 0.15)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.2) * n * binwidth,
size = 1, aes(colour = "N(0, 0.2)")) +
stat_function(fun = function(x) dnorm(x, 0, 0.25) * n * binwidth,
size = 1, aes(colour = "N(0, 0.25)")) +
stat_function(fun = function(y) dgamma(y, 5) * n * binwidth,
aes(colour = "Gamma(1)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 10) * n * binwidth,
aes(colour = "Gamma(2)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 15) * n * binwidth,
aes(colour = "Gamma(3)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 20) * n * binwidth,
aes(colour = "Gamma(4)"), size = 1) +
stat_function(fun = function(y) dgamma(y, 25) * n * binwidth,
aes(colour = "Gamma(5)"), size = 1)+
scale_colour_manual("PDF", values = c("deeppink", "dodgerblue3", "green", "blue", "red", "yellow", "black", "#4271AE", "#1F3552", "orange"))
sd_dataset = array(0, dim = c(1450))
for (i in 1:1450) {
sd_dataset[i] = sd
}
for (i in 1:1450) {
sd_dataset[i] = sd(dataset[i,1,])
}
plot(sd_dataset)
plot(sd_dataset, pch = 16)
plot(sd_dataset, pch = 16, col = cl$clusters$cluster)
sd(rgamma(20))
sd(rgamma(1000, 20))
sd(rgamma(1000, 25))
sd(rgamma(1000, 20))
sd(rgamma(1000, 25))
sd(rgamma(1000, 10))
sd(rgamma(1000, 5))
sd(rgamma(1000, 15))
plot(sd_dataset, pch = 16, col = lambda3)
length(lambda3)
lambda3[1]
lambda3[2]
lambda3[450]
lambda3[500]
plot(sd_dataset, pch = 16, col = lambda3 + 10)
plot(sd_dataset, pch = 16, col = lambda2 + lambda3 + lambda4)
plot(sd_dataset, pch = 16, col = sqrt(lambda2 + lambda3 + lambda4))
