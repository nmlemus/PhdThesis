colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * binwidth,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.2,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.1,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.2,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 1000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.2,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.2,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 5
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.2,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 1
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.2,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 0.5
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.2,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 0.5
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.3,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 0.5
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dexp(x, sd) * n * 0.3,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 0.5
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dunif(0, sd) * n * 0.3,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 0.5
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dunif(0, sd) * n * 0.3,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 0.5
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
df
hist(df$x)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
df <- data.frame(x = runif(0, 2))
df$x
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rexp(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dunif(x, sd) * n * 0.3,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dunif(x, sd) * n * 0.3,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dunif(x, 0, sd) * n * 0.3,
color = "darkred", size = 1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.4)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.5 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.1 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 1000
mean = 0
sd = 2
binwidth = 0.1 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.1 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.1 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = runif(n, 0, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.1 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rgamma(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1)
# parameters that will be passed to ``stat_function``
n = 10000
mean = 0
sd = 2
binwidth = 0.3 # passed to geom_histogram and stat_function
set.seed(1)
df <- data.frame(x = rgamma(n, sd))
ggplot(df, aes(x = x)) +
theme_bw() +
geom_histogram(binwidth = binwidth,
colour = "white", fill = "cornflowerblue", size = 0.1) +
stat_function(fun = function(x) dgamma(x, sd) * n * 0.3,
color = "darkred", size = 1)
93 + 90 + 195 + 90
468-450
18-3
clusters = cl$cluster
197+131+122
91+89+90+90+90
setwd("~/PhD/PhDThesis/img/gld_clustering/Dataset2/nuevo")
source('~/PhD/thesis_phd/uqms/uqms/R/test.R')
a = rgamma(1000, 1)
hist(a)
hist(a, 25)
a = rgamma(1000, 2)
hist(a, 25)
a = rgamma(1000, 3)
hist(a, 25)
a = rgamma(1000, 4)
hist(a, 25)
a = rgamma(1000, 5)
hist(a, 25)
a = rgamma(1000, 10)
hist(a, 25)
a = rgamma(1000, 15)
hist(a, 25)
a = rgamma(1000, 20)
hist(a, 25)
a = rgamma(1000, 25)
hist(a, 25)
source('~/PhD/thesis_phd/uqms/uqms/R/test.R')
dataset = createSyntheticData()
saveRDS(dataset, 'dataset.rds')
theRes = gldFitTest(dataset)
saveRDS(theRes, 'theRes.rds')
lambdas = extractLambdas(theRes, 1450)
library("stringr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
lambdas = extractLambdas(theRes, 1450)
cl = gldClustering1D(lambdas, 16)
cl$clusters$size
plot(cl$clusters$cluster)
plot(cl$clusters$cluster, col = cl$clusters$cluster)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16)
clusters = cl$clusters$cluster
x = cl$x
gldClustersL3L4(clusters, x)
clusters = cl$clusters
gldClustersL3L4(clusters, x)
clusters = cl$clusters$cluster
gldClustersL3L4(clusters, x)
clusters
lambda1 = lambdas[,,1]
lambda2 = lambdas[,,2]
lambda3 = lambdas[,,3]
lambda4 = lambdas[,,4]
gldClustersL3L4(clusters, x)
gldClustersL3L4(clusters, x)
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
no_clusters = max(clusters)
no_clusters
plot.clusters.l3l4(1, 1)
plot.clusters.l3l4(2, 2)
plot.clusters.l3l4(3, 3)
plot.clusters.l3l4(4, 4)
plot.clusters.l3l4(5, 5)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
gldClustersL3L4(clusters, x)
gldClustersL3L4(clusters, x)
gldClustersL3L4(clusters, x)
plot.gld.by.cluster(1, 90)
library("GLDEX", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
plot.gld.by.cluster(1, 90)
plot.gld.by.cluster(2, 90)
plot.gld.by.cluster(3, 90)
plot.gld.by.cluster(4, 90)
plot.gld.by.cluster(5, 90)
plot.gld.by.cluster(6, 90)
plot.gld.by.cluster(7, 90)
plot.gld.by.cluster(8, 90)
plot.gld.by.cluster(9, 90)
plot.gld.by.cluster(10, 90)
plot.gld.by.cluster(11, 90)
plot.gld.by.cluster(12, 90)
plot.gld.by.cluster(13, 90)
plot.gld.by.cluster(14, 90)
plot.gld.by.cluster(15, 90)
plot.gld.by.cluster(16, 90)
plot.gld.by.cluster(17, 90)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab("Index"))
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index")
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number")
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
cl$clusters$size
gldClustersL3L4(clusters, x)
gldClustersL2L3L4(clusters, x)
par(mfrow=c(2,2))
par(mfrow=c(2,2))
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
plot.clusters.l3l4(1, 1)
plot.clusters.l3l4(2, 2)
plot.clusters.l3l4(3, 3)
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
plot.clusters.l3l4(4, 4)
plot.clusters.l3l4(5, 5)
plot.clusters.l3l4(6, 6)
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
plot.clusters.l3l4(7, 7)
plot.clusters.l3l4(8, 8)
plot.clusters.l3l4(9, 9)
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
plot.clusters.l3l4(10, 10)
plot.clusters.l3l4(11, 11)
plot.clusters.l3l4(12, 12)
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
plot.clusters.l3l4(13, 13)
plot.clusters.l3l4(14, 14)
plot.clusters.l3l4(15, 15)
plot.clusters.l3l4(16, 16)
plot(lambda3, lambda4, type = "n", xlab = TeX('$\\lambda_{3}'), ylab = TeX('$\\lambda_{4}'), main = TeX('Clusters in $\\lambda_{3}-\\lambda_{4}'))  # setting up coord. system
plot.clusters.l3l4(16, 16)
cl1 = gldClustering1D(lambdas, 16, l234 = FALSE)
clusters = cl1$clusters$cluster
x = cl1$x
gldClustersL3L4(clusters, x)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
plot.gld.by.cluster(1, 90)
plot.gld.by.cluster(2, 90)
plot.gld.by.cluster(3, 90)
plot.gld.by.cluster(4, 90)
plot.gld.by.cluster(5, 90)
plot.gld.by.cluster(6, 90)
plot.gld.by.cluster(7, 90)
plot.gld.by.cluster(8, 90)
plot.gld.by.cluster(9, 90)
plot.gld.by.cluster(10, 90)
plot.gld.by.cluster(11, 90)
plot.gld.by.cluster(12, 90)
plot.gld.by.cluster(13, 90)
plot.gld.by.cluster(14, 90)
plot.gld.by.cluster(15, 90)
plot.gld.by.cluster(16, 90)
plot(cl$clusters$cluster, col = cl$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
plot(cl1$clusters$cluster, col = cl1$clusters$cluster, pch = 16, xlab = "Index", ylab = "Cluster Number", main = "Cluster number by dataset index")
cl$clusters$size
cl1$clusters$size
klDivergenceInClusters(cl1$clusters$centers, 16)
cl1$clusters$centers
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
klDivergenceInClusters(cl1$clusters$centers, 16)
dim(clusters)
length(clusters)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
klDivergenceInClusters(cl1$clusters$centers, 16)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
klDivergenceInClusters(cl1$clusters$centers, 16)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
klDivergenceInClusters(cl1$clusters$centers, 16)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
klDivergenceInClusters(cl1$clusters$centers, 16)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
klDivergenceInClusters(cl1$clusters$centers, 16)
clusters = cl$clusters$cluster
x = cl$x
klDivergenceInClusters(cl$clusters$centers, 16)
source('~/PhD/thesis_phd/uqms/uqms/R/gld_utilities.R')
klDivergenceInClusters(cl$clusters$centers, 16)
klDivergenceInClusters(cl1$clusters$centers, 16)
